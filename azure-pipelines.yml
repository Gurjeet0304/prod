# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
 branches:
   include:
     - master
 paths:
  exclude:
    - hello.yaml

resources:
- repo: self




variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b38eceec-aed2-449e-8609-b9cade2aac33'
  imageRepository: 'gurjeetprod'
  containerRegistry: 'gurjeet.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'inhouse'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
     name: inhouse
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    #- task: Bash@3
    #  inputs:
    #    targetType: 'inline'
    #    script: |
    #      git clone git@github.com:Gurjeet0304/prod.git
    #      git config --global user.email "gurjeetsahi@gmail.com"
    #      git config --global user.name "Gurjeet0304"
    #      cd prod
    #      sed -i "s,gurjeet.azurecr.io/gurjeetprod:.*,$(containerRegistry)/$(imageRepository):$(tag),g" hello.yaml
    #      git commit -a -m "$(tag)"
    #      git push origin 
    - bash: |
          rm -rf *
          git clone git@github.com:Gurjeet0304/prod.git
          git config --global user.email "gurjeetsahi@gmail.com"
          git config --global user.name "Gurjeet0304"
          cd prod
          sed -i "s,gurjeet.azurecr.io/gurjeetprod:.*,$(containerRegistry)/$(imageRepository):$(tag),g" hello.yaml
          cp -rf hello.yaml $(Agent.HomeDirectory)
          git commit -a -m "$(tag)"
          git push origin
      
                  


    - task: CopyFiles@2
      inputs:
        #SourceFolder: '$(Agent.HomeDirectory)'
        Contents: 'hello.yaml'
        TargetFolder: '$(Agent.HomeDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        #PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        PathtoPublish: '$(Agent.HomeDirectory)'

        ArtifactName: 'drop'
        publishLocation: 'Container'
